# General CI Template for various situation
# **** Review All "XXX" Before Use ****
# Author: Misty

name: Github CI

on:
  push:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
  repository_dispatch:
  #schedule:
  #  - cron: "0 */4 * * *" # min hour day week year


jobs:
  build:
    #### Build Matrix
    # strategy:
    #   matrix:
    #     builder: [ghcr.io/nyamisty/altserver_builder_alpine_armv7, ghcr.io/nyamisty/altserver_builder_alpine_aarch64, ghcr.io/nyamisty/altserver_builder_alpine_amd64, ghcr.io/nyamisty/altserver_builder_alpine_i386]

    runs-on: ubuntu-latest
    steps:
      ##########################################################
      ###
      ### XXX: Pre-init steps here
      ###
      ##########################################################
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Generate timestamp
        id: timestamp
        run: |
          TIMESTAMP="$(date +"%Y%m%d")"
          echo "Timestamp: ${TIMESTAMP}"
          echo "::set-output name=value::${TIMESTAMP}"
      - name: Get tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: tag
        uses: dawidd6/action-get-tag@v1
      
      ### XXX: Auto update submodule ref, enable this if needed
      - name: Update submodules
        run: |
          git submodule update --init --recursive
          git submodule update --remote      

      ### SSH Git Private
      - name: Setup SSH (key agent)
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
            ${{ secrets.SSH_KEY1 }}
            ${{ secrets.SSH_KEY2 }}
            ${{ secrets.SSH_KEY3 }}
      - name: Setup SSH (config & known-host)
        run: |
          mkdir -p $HOME/.ssh
          # Setup needed known hosts
          ssh-keyscan -H gitlab.com >> $HOME/.ssh/known_hosts

      ### XXX: Keep alive cron-type workflows
      - uses: gautamkrishnar/keepalive-workflow@master

      ##########################################################
      ###
      ### XXX: Env-setup steps here
      ###
      ##########################################################
      ### Python
      ##
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: x64
          cache: 'pip'
      - run: pip3 install -r requirements.txt

      ### Node
      ## 
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm install
      

      ##########################################################
      ###
      ### XXX: Pre-build steps here (checking, debugging)
      ###
      ##########################################################
        
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      

      ##########################################################
      ###
      ### XXX: Main building steps here
      ###
      ##########################################################
            
      - name: Python Env
        run: python3 -c "print(1234)"
        env:
          PYTHONIOENCODING: "UTF-8"
      - name: Node Env
        run: |
          echo "console.log(1234)" | node -


      ##########################################################
      ###
      ### XXX: Artifact Upload
      ###
      ##########################################################
      
      # XXX: Select one debug artifact uploading
      # Upload action artifact as-is
      - name: Upload to GitHub Actions artifact
        uses: NyaMisty/upload-artifact-as-is@master
        with:
          path: testfiles/*
      # Upload action artifact into container
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: testfiles/*

      # XXX: Select one release artifact uploading
      # Release to Github, WITHOUT TAG
      # Release to Github, WITH TAG
      - name: Upload to Existing Release
        uses: softprops/action-gh-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          files: testfiles/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create New Release and Upload
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "testfiles/*"
          name: "${{ format('LastBuild: {0} commit {1}', steps.timestamp.outputs.value, github.sha) }}"
          tag: "test-release"
          commit: ${{ github.sha }}
          #prerelease: true
          allowUpdates: true
          removeArtifacts: true
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}

  
  ##########################################################
  ###
  ###  XXX: Multi-Builder Release Uploading
  ###     Enable if you have multiple build job uploading artifact
  ###     Must be used together with upload-artifact-as-is
  ###
  ##########################################################
  release:
    runs-on: ubuntu-latest
    needs: [build]
    name: "release"
    steps:
    - name: "Create artifact directory"
      run: |
        mkdir -p build_output
    - name: "Download all artifacts"
      uses: actions/download-artifact@v2
      with:
        path: build_output
    - name: "Rearrange artifacts"
      run: |
        find build_output
        mkdir -p build_release
        mv build_output/*/* build_release
        ls build_release
        if [ "$(ls -A build_release)" ]; then exit 0; else exit 1; fi
    - name: Release
      uses: softprops/action-gh-release@v1
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        files: build_release/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

