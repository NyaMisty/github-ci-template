### CI for build one docker
# Need: 

name: ci
on: 
  push:

env:
  ### Select one image format here
  # ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  # DockerHub
  IMAGE_NAME: username/${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      -
        name: Generate timestamp
        id: timestamp
        run: |
          TIMESTAMP="$(date +"%Y%m%d")"
          echo "Timestamp: ${TIMESTAMP}"
          echo "::set-output name=value::${TIMESTAMP}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      

      ##########################################################
      ###
      ###    XXX: Select one login method here
      ###
      ##########################################################
      - name: Log in to the GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Login to the DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - ### XXX: Customize your tag selection here!
        name: Determine tags
        uses: haya14busa/action-cond@v1
        id: tags
        with:
          cond: ${{ matrix.wine_branch == 'stable' && matrix.wine_arch == 'win32' }}
          if_true:
            ${{ env.IMAGE_NAME }}:true_tag1,
            ${{ env.IMAGE_NAME }}:true_tag2,
          if_false:
            ${{ env.IMAGE_NAME }}:false_tag1,
            ${{ env.IMAGE_NAME }}:false_tag2,

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            latest=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TEST1=${{ matrix.TEST1 }}
            TEST2=${{ matrix.TEST2 }}
          
          push: true
          tags: ${{ steps.tags.outputs.value }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
